#env:
#  matrix:
#    - export NODE_VERSION="4"
#    - export NODE_VERSION="6"
#    - export NODE_VERSION="7"

#  include:
#    - compiler: gcc

#    - compiler: clang

#os:
#  - osx
#  - linux

matrix:

  env:
    - export NODE_VERSION="4"
    - export NODE_VERSION="6"
    - export NODE_VERSION="7"

  include:

    ##########################################################################
    # Clang on OSX
    # Travis seems to take longer to start OSX instances,
    # so leave this first for the overall build to be faster
    ##########################################################################

    # XCode 8.3
    - env: COMPILER=clang++ BUILD_TYPE=Debug
      os: osx
      osx_image: xcode8.3
      compiler: clang

    - env: COMPILER=clang++ BUILD_TYPE=Release
      os: osx
      osx_image: xcode8.3
      compiler: clang

    # XCode 9.1
    - env: COMPILER=clang++ BUILD_TYPE=Debug
      os: osx
      osx_image: xcode9.1
      compiler: clang

    - env: COMPILER=clang++ BUILD_TYPE=Release
      os: osx
      osx_image: xcode9.1
      compiler: clang

    ##########################################################################
    # Clang on Linux
    ##########################################################################

    # Clang 3.6
    - env: COMPILER=clang++-3.6 BUILD_TYPE=Debug
      addons: &clang36
        apt:
          packages:
            - clang-3.6
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6

    - env: COMPILER=clang++-3.6 BUILD_TYPE=Release
      addons: *clang36

    # Clang 3.7
    - env: COMPILER=clang++-3.7 BUILD_TYPE=Debug
      addons: &clang37
        apt:
          packages:
            - clang-3.7
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7

    - env: COMPILER=clang++-3.7 BUILD_TYPE=Release
      addons: *clang37

    # Clang 3.8
    - env: COMPILER=clang++-3.8 BUILD_TYPE=Debug
      addons: &clang38
        apt:
          packages:
            - clang-3.8
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8

    - env: COMPILER=clang++-3.8 BUILD_TYPE=Release
      addons: *clang38

    # Clang 3.9
    - env: COMPILER=clang++-3.9 BUILD_TYPE=Debug
      addons: &clang39
        apt:
          packages:
            - clang-3.9
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9

    - env: COMPILER=clang++-3.9 BUILD_TYPE=Release
      addons: *clang39

    # Clang 4.0
    - env: COMPILER=clang++-4.0 BUILD_TYPE=Debug
      addons: &clang40
        apt:
          packages:
            - clang-4.0
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0

    - env: COMPILER=clang++-4.0 BUILD_TYPE=Release
      addons: *clang40

    # Clang 5.0
    - env: COMPILER=clang++-5.0 BUILD_TYPE=Debug
      addons: &clang40
        apt:
          packages:
            - clang-5.0
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    - env: COMPILER=clang++-5.0 BUILD_TYPE=Release
      addons: *clang40    

    ##########################################################################
    # GCC on Linux
    ##########################################################################

    # GCC 5
    - env: COMPILER=g++-5 BUILD_TYPE=Debug
      addons: &gcc5
        apt:
          packages: g++-5
          sources:
            - ubuntu-toolchain-r-test

    - env: COMPILER=g++-5 BUILD_TYPE=Release
      addons: *gcc5

    # GCC 6
    - env: COMPILER=g++-6 BUILD_TYPE=Debug
      addons: &gcc6
        apt:
          packages: g++-6
          sources:
            - ubuntu-toolchain-r-test

    - env: COMPILER=g++-6 BUILD_TYPE=Release
      addons: *gcc6


branches:
#  only:
#    - master

git:
  depth: 10

#addons:
#  apt:
#    sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.9']
#    packages: ['clang-3.9', 'g++-6']

before_install:
  - if [ "$TRAVIS_OS_NAME" = "linux"  ]; then sudo apt-get -qq update;    fi
  - git clone https://github.com/creationix/nvm.git ./.nvm
  - source ./.nvm/nvm.sh
  - nvm install $NODE_VERSION
  - nvm use $NODE_VERSION

install:
  - export CXX=${COMPILER}
  - ${CXX} --version
  - npm install

before_script:
#  - env
#  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="g++-6" CC="gcc-6" && cmake .;               fi
#  - if [ "$TRAVIS_OS_NAME" = "osx"   ]; then export CXX="clang++-3.9" npm_config_clang=1 && cmake .; fi
  - cmake .

script:
  - npm test
  - cmake --build .
  - ctest -VV

dist: trusty
sudo: false
